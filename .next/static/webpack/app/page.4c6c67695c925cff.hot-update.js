"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/useAuth.ts":
/*!**************************!*\
  !*** ./hooks/useAuth.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./lib/supabase.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction useAuth() {\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [localUserData, setLocalUserData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Get user data from localStorage\n    const getLocalUserData = ()=>{\n        try {\n            const userData = localStorage.getItem(\"musicapp_user\");\n            if (userData) {\n                const parsed = JSON.parse(userData);\n                console.log(\"\\uD83D\\uDCF1 Retrieved user data from localStorage:\", parsed);\n                return parsed;\n            }\n            console.log(\"\\uD83D\\uDCF1 No user data found in localStorage\");\n            return null;\n        } catch (error) {\n            console.error(\"❌ Error parsing localStorage user data:\", error);\n            return null;\n        }\n    };\n    // Save user data to localStorage\n    const saveLocalUserData = (userData)=>{\n        try {\n            localStorage.setItem(\"musicapp_user\", JSON.stringify(userData));\n            console.log(\"\\uD83D\\uDCBE Saved user data to localStorage:\", userData);\n            setLocalUserData(userData);\n        } catch (error) {\n            console.error(\"❌ Error saving user data to localStorage:\", error);\n        }\n    };\n    // Clear user data from localStorage\n    const clearLocalUserData = ()=>{\n        try {\n            localStorage.removeItem(\"musicapp_user\");\n            console.log(\"\\uD83D\\uDDD1️ Cleared user data from localStorage\");\n            setLocalUserData(null);\n        } catch (error) {\n            console.error(\"❌ Error clearing localStorage:\", error);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let mounted = true;\n        console.log(\"\\uD83D\\uDD04 useAuth effect started\");\n        // Check localStorage first for immediate user data\n        const localData = getLocalUserData();\n        if (localData) {\n            setLocalUserData(localData);\n            console.log(\"✅ Using localStorage user data for immediate access\");\n        }\n        // Get initial session with timeout\n        const getInitialSession = async ()=>{\n            try {\n                console.log(\"\\uD83D\\uDD0D Checking for existing session...\");\n                // Set a timeout for the session check\n                const sessionPromise = _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.getSession();\n                const timeoutPromise = new Promise((_, reject)=>setTimeout(()=>reject(new Error(\"Session timeout\")), 8000));\n                const { data: { session }, error } = await Promise.race([\n                    sessionPromise,\n                    timeoutPromise\n                ]);\n                if (error) {\n                    console.error(\"❌ Session error:\", error);\n                    if (mounted) {\n                        // If session fails but we have local data, use it\n                        if (localData) {\n                            console.log(\"⚠️ Session failed but using localStorage data\");\n                            setUser(null) // No session user but keep local data\n                            ;\n                            setLoading(false);\n                        } else {\n                            console.log(\"❌ No session and no localStorage data\");\n                            setUser(null);\n                            setLocalUserData(null);\n                            setLoading(false);\n                        }\n                    }\n                    return;\n                }\n                if (mounted) {\n                    if (session === null || session === void 0 ? void 0 : session.user) {\n                        var _session_user_user_metadata, _session_user_user_metadata1, _session_user_user_metadata2;\n                        console.log(\"✅ Valid session found for user:\", session.user.email);\n                        setUser(session.user);\n                        // Update localStorage with fresh session data\n                        const userData = {\n                            id: session.user.id,\n                            email: session.user.email,\n                            username: ((_session_user_user_metadata = session.user.user_metadata) === null || _session_user_user_metadata === void 0 ? void 0 : _session_user_user_metadata.full_name) || ((_session_user_user_metadata1 = session.user.user_metadata) === null || _session_user_user_metadata1 === void 0 ? void 0 : _session_user_user_metadata1.name),\n                            avatar_url: (_session_user_user_metadata2 = session.user.user_metadata) === null || _session_user_user_metadata2 === void 0 ? void 0 : _session_user_user_metadata2.avatar_url\n                        };\n                        saveLocalUserData(userData);\n                    } else {\n                        console.log(\"❌ No valid session found\");\n                        // If no session but we have local data, keep using it\n                        if (!localData) {\n                            setUser(null);\n                            setLocalUserData(null);\n                        }\n                    }\n                    setLoading(false);\n                }\n            } catch (error) {\n                console.error(\"❌ Failed to get session:\", error);\n                if (mounted) {\n                    // If session check fails but we have local data, use it\n                    if (localData) {\n                        console.log(\"⚠️ Session check failed but using localStorage data\");\n                        setUser(null);\n                        setLoading(false);\n                    } else {\n                        console.log(\"❌ Session check failed and no localStorage data\");\n                        setUser(null);\n                        setLocalUserData(null);\n                        setLoading(false);\n                    }\n                }\n            }\n        };\n        getInitialSession();\n        // Listen for auth changes\n        const { data: { subscription } } = _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.onAuthStateChange(async (event, session)=>{\n            var _session_user;\n            console.log(\"\\uD83D\\uDD04 Auth state changed:\", event, session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.email);\n            if (!mounted) return;\n            if (event === \"SIGNED_OUT\" || !session) {\n                console.log(\"\\uD83D\\uDC4B User signed out\");\n                setUser(null);\n                clearLocalUserData();\n                setLoading(false);\n                return;\n            }\n            if (event === \"SIGNED_IN\" && (session === null || session === void 0 ? void 0 : session.user)) {\n                var _session_user_user_metadata, _session_user_user_metadata1, _session_user_user_metadata2;\n                console.log(\"\\uD83D\\uDC4B User signed in:\", session.user.email);\n                setUser(session.user);\n                setLoading(false);\n                // Save user data to localStorage\n                const userData = {\n                    id: session.user.id,\n                    email: session.user.email,\n                    username: ((_session_user_user_metadata = session.user.user_metadata) === null || _session_user_user_metadata === void 0 ? void 0 : _session_user_user_metadata.full_name) || ((_session_user_user_metadata1 = session.user.user_metadata) === null || _session_user_user_metadata1 === void 0 ? void 0 : _session_user_user_metadata1.name),\n                    avatar_url: (_session_user_user_metadata2 = session.user.user_metadata) === null || _session_user_user_metadata2 === void 0 ? void 0 : _session_user_user_metadata2.avatar_url\n                };\n                saveLocalUserData(userData);\n                // Update last_login when user signs in\n                try {\n                    console.log(\"\\uD83D\\uDCDD Updating user data in database...\");\n                    await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"users\").upsert({\n                        id: session.user.id,\n                        email: session.user.email,\n                        username: userData.username,\n                        avatar_url: userData.avatar_url,\n                        last_login: new Date().toISOString()\n                    });\n                    console.log(\"✅ User data updated in database\");\n                } catch (error) {\n                    console.error(\"❌ Error updating user data:\", error);\n                }\n            } else {\n                var _session_user1;\n                setUser((_session_user1 = session === null || session === void 0 ? void 0 : session.user) !== null && _session_user1 !== void 0 ? _session_user1 : null);\n                setLoading(false);\n            }\n        });\n        return ()=>{\n            mounted = false;\n            subscription.unsubscribe();\n            console.log(\"\\uD83D\\uDD04 useAuth cleanup completed\");\n        };\n    }, []);\n    const signInWithGoogle = async ()=>{\n        try {\n            console.log(\"\\uD83D\\uDD10 Starting Google sign in...\");\n            setLoading(true);\n            const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.signInWithOAuth({\n                provider: \"google\",\n                options: {\n                    redirectTo: \"\".concat(window.location.origin),\n                    queryParams: {\n                        access_type: \"offline\",\n                        prompt: \"consent\"\n                    }\n                }\n            });\n            if (error) {\n                console.error(\"❌ Error signing in:\", error);\n                setLoading(false);\n            } else {\n                console.log(\"✅ Google sign in initiated\");\n            }\n        } catch (error) {\n            console.error(\"❌ Sign in error:\", error);\n            setLoading(false);\n        }\n    };\n    const signOut = async ()=>{\n        try {\n            console.log(\"\\uD83D\\uDC4B Starting sign out...\");\n            setLoading(true);\n            const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.signOut();\n            if (error) {\n                console.error(\"❌ Error signing out:\", error);\n            } else {\n                console.log(\"✅ Successfully signed out\");\n            }\n            // Clear all cached data\n            localStorage.clear();\n            sessionStorage.clear();\n            clearLocalUserData();\n            setUser(null);\n            setLoading(false);\n        } catch (error) {\n            console.error(\"❌ Sign out error:\", error);\n            setLoading(false);\n        }\n    };\n    // Return both session user and local user data\n    // Priority: use session user if available, otherwise use local data\n    const effectiveUser = user || (localUserData ? {\n        id: localUserData.id,\n        email: localUserData.email,\n        user_metadata: {\n            full_name: localUserData.username,\n            name: localUserData.username,\n            avatar_url: localUserData.avatar_url\n        }\n    } : null);\n    return {\n        user: effectiveUser,\n        localUserData,\n        loading,\n        signInWithGoogle,\n        signOut,\n        getUserId: ()=>(localUserData === null || localUserData === void 0 ? void 0 : localUserData.id) || (user === null || user === void 0 ? void 0 : user.id) || null,\n        isAuthenticated: !!(localUserData || user)\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useAuth.ts\n"));

/***/ })

});